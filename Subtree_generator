import itertools
import numpy as np

iter = [ [1,2], [0,1,2,3], [0,1] ] #number of possible children, first entry can't be zero

fg = len(iter[0]) #number of first gen children
l = len(iter) #number of parents in tree ~ non leaves

for t in itertools.product(*iter): #all possible combos of iter
    #print (t)
    
    m = t[0] #first entry of each subtree vector
    
    n = np.count_nonzero(t[1:fg+1]) #number of nonzero first gen children ~ same check would need to be done for every gen
    
    print([s for s in t if n<=m]) #printing subtree vectors that have enough parents for first gen children
